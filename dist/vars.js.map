{"version":3,"file":"vars.js","sources":["../src/lib/vars.ts"],"sourcesContent":["import {Accessor, createMemo, createSignal, EffectFunction, MemoOptions, NoInfer, Signal} from \"solid-js\";\nimport {createStore, Store} from \"solid-js/store\";\nimport {Observer, Unsubscribable} from \"type-fest\";\nimport {CustomElement} from \"./customElement\";\n\ntype Vars = {[key: string | symbol]: any};\ntype VarName = string | symbol;\n\nexport interface ObservableLike<ValueType = unknown> {\n    subscribe(observer?: Partial<Observer<ValueType>>): Unsubscribable;\n}\n\nconst allVars = new WeakMap<CustomElement, Vars>()\n\nclass VarValue {\n    value: any;\n    onDelete?: () => void;\n}\n\nfunction assertNotExists(vars: Vars | undefined, name: VarName) {\n    if (vars && name in vars) {\n        throw new Error(`Element var ${String(name)} already exists`);\n    }\n}\n\nfunction assertExists(vars: Vars | undefined, name: VarName) {\n    if (vars && !(name in vars)) {\n        throw new Error(`Element var ${String(name)} not exists`);\n    }\n}\n\nexport function getElementVar<T>(element: CustomElement, name: VarName): T | undefined {\n    const v = allVars.get(element)?.[name];\n    if (v instanceof VarValue) {\n        return v.value;\n    } else {\n        return v;\n    }\n}\n\nexport function createElementVar<T>(element: CustomElement, name: VarName, value: T, options?: {onDelete?: (() => any | void)}): T {\n    assertNotExists(allVars.get(element), name);\n    setElementVar(element, name, value, options);\n    return value;\n}\n\nexport function setElementVar(element: CustomElement, name: VarName, value: any, options?: {onDelete?: (() => any | void)}) {\n\n    let vars = allVars.get(element);\n    if (!vars) {\n        vars = {};\n        allVars.set(element, vars);\n\n        element.addDisconnectedCallback(() => {\n\n            const vars = allVars.get(element);\n            if (vars) {\n                for (const v of Object.values(vars)) {\n                    if (v instanceof VarValue) {\n                        v.onDelete?.();\n                    }\n                }\n            }\n\n            allVars.delete(element)\n        });\n    }\n\n    let varValue = value;\n    if (options?.onDelete) {\n        varValue = new VarValue();\n        varValue.value = value;\n        varValue.onDelete = options.onDelete;\n    }\n\n    vars[name] = varValue;\n}\n\nexport function deleteElementVar<T>(element: CustomElement, name: VarName): T | undefined {\n    const vars = allVars.get(element);\n    if (vars) {\n\n        let v = vars[name];\n        if (v instanceof VarValue) {\n            v.onDelete?.();\n            v = v.value;\n        }\n\n        delete vars[name];\n        return v;\n    }\n}\n\nexport function createElementMemo<Next extends Prev, Prev = Next>(element: CustomElement, name: VarName, fn: EffectFunction<undefined | NoInfer<Prev>, Next>): Accessor<Next>;\nexport function createElementMemo<Next extends Prev, Init = Next, Prev = Next>(element: CustomElement, name: VarName, fn: EffectFunction<Init | Prev, Next>, value: Init, options?: MemoOptions<Next>): Accessor<Next>;\n\nexport function createElementMemo<Next extends Prev, Init = Next, Prev = Next>(element: CustomElement, name: VarName, fn?: any, value?: Init, options?: MemoOptions<Next>): Accessor<Next> {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const memo = createMemo<Next, Init, Prev>(fn, value!, options);\n\n    setElementVar(element, name, memo);\n\n    return memo;\n}\n\nexport function useElementMemo<T = any>(element: CustomElement, name: VarName): Accessor<T> {\n\n    const vars = allVars.get(element);\n    assertExists(vars, name)\n\n    let value = vars![name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const memo = value as Accessor<T>;\n    if (typeof memo === \"function\") {\n        return memo;\n    }\n\n    return () => {\n        throw new Error(`Element var ${String(name)} is not a memo`);\n    }\n}\n\nexport function getElementMemo<T = any>(element: CustomElement, name: VarName): T {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const memo = value as Accessor<T>;\n    if (typeof memo === \"function\") {\n        return memo();\n    }\n\n    throw new Error(`Element var ${String(name)} is not a memo`);\n}\n\nexport function createElementSignal<T = any>(element: CustomElement, name: VarName, value?: T) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const signal = createSignal(value);\n\n    setElementVar(element, name, signal);\n\n    return signal;\n}\n\nexport function useElementSignal<T = any>(element: CustomElement, name: VarName): Signal<T | undefined> {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    let signal = value as Signal<T | undefined>;\n    if (!signal) {\n        signal = createElementSignal<T>(element, name);\n    }\n\n    return signal;\n}\n\nexport function getElementSignal<T = any>(element: CustomElement, name: VarName): T | undefined {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    let signal = value as Signal<T | undefined>;\n    if (!signal) {\n        signal = createElementSignal(element, name);\n    }\n\n    return signal[0]();\n}\n\nexport function setElementSignal<T = any>(element: CustomElement, name: VarName, value: (prev: T | undefined) => T) {\n\n    let current = allVars.get(element)?.[name];\n    if (current instanceof VarValue) {\n        current = current.value;\n    }\n\n    let signal = current as Signal<T | undefined>;\n    if (!signal) {\n        signal = createElementSignal(element, name);\n    }\n\n    signal[1](value);\n}\n\nexport function deleteElementSignal(element: CustomElement, name: VarName) {\n    deleteElementVar(element, name);\n}\n\nexport function loadElementSignal<T = any>(element: CustomElement, name: VarName, observable: ObservableLike<T>, options?: {onError?: (error: any) => void}) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const signal = createSignal<T>();\n\n    const unsub = observable.subscribe({\n        next: (data) => signal[1](() => data),\n        error: (error) => {\n            if (options?.onError) {\n                options.onError(error);\n            } else {\n                throw error;\n            }\n        }\n    })\n\n    setElementVar(element, name, signal, {onDelete: (\"unsubscribe\" in unsub ? unsub.unsubscribe : unsub)});\n\n    return signal[0];\n}\n\nexport function deleteElementStore(element: CustomElement, name: VarName) {\n    deleteElementVar(element, name);\n}\n\nexport function useElementStore<S extends {[key: string]: any}>(element: CustomElement, name: VarName): ReturnType<typeof createStore<S>> {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const store = value as ReturnType<typeof createStore<S>>;\n    if (store && Array.isArray(store)) {\n        return store;\n    } else {\n        return [\n            undefined as unknown as S,\n            (v: any) => {\n                const [, setStore] = createElementStore(element, name);\n                return setStore(v);\n            }\n        ] as ReturnType<typeof createStore<S>>;\n    }\n}\n\nexport function setElementStore<S extends {[key: string]: any}>(element: CustomElement, name: VarName, newValue: S){\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const store = value as ReturnType<typeof createStore<S>>;\n    if (store && Array.isArray(store)) {\n        return store[1](newValue);\n    } else {\n        createElementStore(element, name, newValue);\n    }\n}\n\nexport function getElementStore<S extends {[key: string]: any}>(element: CustomElement, name: VarName): Store<S> {\n\n    let value = allVars.get(element)?.[name];\n    if (value instanceof VarValue) {\n        value = value.value;\n    }\n\n    const store = value as ReturnType<typeof createStore<S>>;\n    if (store && Array.isArray(store)) {\n        return store[0];\n    } else {\n        return undefined as unknown as Store<S>;\n    }\n}\n\nexport function createElementStore<S extends {[key: string]: any}>(element: CustomElement, name: VarName, value?: S) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const store = createStore(value);\n\n    setElementVar(element, name, store);\n\n    return store;\n}\n\nexport function loadElementStore<S extends {[key: string]: any}>(element: CustomElement, name: VarName, value: ObservableLike<S>, options?: {onError?: (error: any) => void}) {\n\n    const vars = allVars.get(element);\n    assertNotExists(vars, name);\n\n    const store = createStore<S>({} as any);\n\n    const unsub = value.subscribe({\n        next: (data) => store[1](data),\n        error: (error) => {\n            if (options?.onError) {\n                options.onError(error);\n            } else {\n                throw error;\n            }\n        }\n    })\n\n    setElementVar(element, name, store, {onDelete: () => {\n        if (\"unsubscribe\" in unsub) {\n            unsub.unsubscribe();\n        }\n    }});\n\n    return store[0];\n}\n"],"names":["vars"],"mappings":"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"}