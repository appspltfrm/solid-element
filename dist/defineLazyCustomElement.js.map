{"version":3,"file":"defineLazyCustomElement.js","sources":["../src/lib/defineLazyCustomElement.ts"],"sourcesContent":["import {CustomElement} from \"./customElement\";\nimport {customElementBirthmark} from \"./customElementBirthmark\";\nimport {CustomElementComponent} from \"./defineComponent\";\nimport {buildFinalClass} from \"./internals/buildFinalClass\";\nimport {InternalClass} from \"./internals/InternalClass\";\n\ntype LazyType = Promise<CustomElementConstructor | {default: CustomElementConstructor} | CustomElementComponent<any, CustomElement> | {default: CustomElementComponent<any, CustomElement>}>;\n\nconst elements: {[tagName: string]: () => LazyType} = {};\nconst loading: {[tagName: string]: Promise<void>} = {};\n\nconst observer = \"MutationObserver\" in globalThis ? new MutationObserver(async (mutations) => {\n\n    // elements that were defined within this call\n    let definedElements: string[] = [];\n\n    for (const m of mutations) {\n        if (m.addedNodes) {\n            for (const n of m.addedNodes) {\n\n                if (n instanceof Element && elements[n.tagName]) {\n                    const tagName = n.tagName;\n\n                    if (!definedElements.includes(tagName) && !customElements.get(tagName)) {\n\n                        if (!(tagName in loading)) {\n                            loading[tagName] = new Promise(async (resolve) => {\n                                try {\n                                    let elementClass = await elements[n.tagName]();\n                                    if (typeof elementClass === \"object\") {\n                                        elementClass = elementClass.default;\n                                    }\n\n                                    if (typeof elementClass === \"function\" && (elementClass as unknown as CustomElementComponent<any, CustomElement>).defineCustomElement) {\n                                        (elementClass as unknown as CustomElementComponent<any, CustomElement>).defineCustomElement();\n\n                                    } else {\n\n                                        if ((elementClass as unknown as InternalClass)[customElementBirthmark]) {\n                                            elementClass = buildFinalClass(elementClass as any);\n                                        }\n\n                                        customElements.define(n.tagName.toLowerCase(), elementClass as any);\n                                    }\n\n                                    resolve();\n                                } catch (e) {\n                                    console.error(e);\n                                    delete loading[tagName];\n                                }\n                            })\n                        }\n\n                        await loading[tagName];\n\n                        definedElements.push(n.tagName);\n                    }\n\n                    if (definedElements.includes(n.tagName)) {\n                        customElements.upgrade(n);\n                    }\n                }\n            }\n        }\n    }\n\n    for (const e of definedElements) {\n        delete elements[e];\n        delete loading[e];\n    }\n\n    if (Object.keys(elements).length === 0) {\n        observer?.disconnect();\n    }\n}) : undefined;\n\nlet connected = false;\n\nexport function defineLazyCustomElement(tagName: string, loader: () => LazyType): void {\n\n    tagName = tagName.toUpperCase();\n\n    if (customElements.get(tagName) || elements[tagName]) {\n        throw new Error(`Custom element ${tagName} already defined`);\n    }\n\n    elements[tagName] = loader;\n\n    if (!connected) {\n        connected = true;\n        observer?.observe(document, {subtree: true, childList: true});\n    }\n}\n"],"names":[],"mappings":";;AAQA,MAAM,WAAgD,CAAC;AACvD,MAAM,UAA8C,CAAC;AAErD,MAAM,WAAW,sBAAsB,aAAa,IAAI,iBAAiB,OAAO,cAAc;AAG1F,MAAI,kBAA4B,CAAC;AAEjC,aAAW,KAAK,WAAW;AACvB,QAAI,EAAE,YAAY;AACH,iBAAA,KAAK,EAAE,YAAY;AAE1B,YAAI,aAAa,WAAW,SAAS,EAAE,OAAO,GAAG;AAC7C,gBAAM,UAAU,EAAE;AAEd,cAAA,CAAC,gBAAgB,SAAS,OAAO,KAAK,CAAC,eAAe,IAAI,OAAO,GAAG;AAEhE,gBAAA,EAAE,WAAW,UAAU;AACvB,sBAAQ,OAAO,IAAI,IAAI,QAAQ,OAAO,YAAY;AAC1C,oBAAA;AACA,sBAAI,eAAe,MAAM,SAAS,EAAE,OAAO,EAAE;AACzC,sBAAA,OAAO,iBAAiB,UAAU;AAClC,mCAAe,aAAa;AAAA,kBAAA;AAGhC,sBAAI,OAAO,iBAAiB,cAAe,aAAuE,qBAAqB;AAClI,iCAAuE,oBAAoB;AAAA,kBAAA,OAEzF;AAEE,wBAAA,aAA0C,sBAAsB,GAAG;AACpE,qCAAe,gBAAgB,YAAmB;AAAA,oBAAA;AAGtD,mCAAe,OAAO,EAAE,QAAQ,YAAA,GAAe,YAAmB;AAAA,kBAAA;AAG9D,0BAAA;AAAA,yBACH,GAAG;AACR,0BAAQ,MAAM,CAAC;AACf,yBAAO,QAAQ,OAAO;AAAA,gBAAA;AAAA,cAC1B,CACH;AAAA,YAAA;AAGL,kBAAM,QAAQ,OAAO;AAEL,4BAAA,KAAK,EAAE,OAAO;AAAA,UAAA;AAGlC,cAAI,gBAAgB,SAAS,EAAE,OAAO,GAAG;AACrC,2BAAe,QAAQ,CAAC;AAAA,UAAA;AAAA,QAC5B;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AAGJ,aAAW,KAAK,iBAAiB;AAC7B,WAAO,SAAS,CAAC;AACjB,WAAO,QAAQ,CAAC;AAAA,EAAA;AAGpB,MAAI,OAAO,KAAK,QAAQ,EAAE,WAAW,GAAG;AACpC,yCAAU;AAAA,EAAW;AAE7B,CAAC,IAAI;AAEL,IAAI,YAAY;AAEA,SAAA,wBAAwB,SAAiB,QAA8B;AAEnF,YAAU,QAAQ,YAAY;AAE9B,MAAI,eAAe,IAAI,OAAO,KAAK,SAAS,OAAO,GAAG;AAClD,UAAM,IAAI,MAAM,kBAAkB,OAAO,kBAAkB;AAAA,EAAA;AAG/D,WAAS,OAAO,IAAI;AAEpB,MAAI,CAAC,WAAW;AACA,gBAAA;AACZ,yCAAU,QAAQ,UAAU,EAAC,SAAS,MAAM,WAAW;EAAK;AAEpE;"}